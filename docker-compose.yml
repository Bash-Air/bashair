version: "3.9"

services:
  fastapi: &fastapi
    build:
      context: .
      dockerfile: Dockerfile
    image: backend_fastapi
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
#      - postgres
      - influxdb
    ports:
      - "8000:8000"
    command: uvicorn config.asgi:fastapp --reload --host 0.0.0.0 --port 8000

  telega:
    <<: *fastapi
    ports: []
    command: python bots/telega.py

#  django:
#    <<: *fastapi
#    ports:
#      - "8001:8000"
##    command: python manage.py runserver 0.0.0.0:8000 --settings=config.settings
#    command: uvicorn config.asgi:application --reload --host 0.0.0.0 --port 8000 --lifespan off


#  postgres:
#    build:
#      context: compose/postgres
#      dockerfile: ./Dockerfile
#    image: postgres
#    volumes:
#      - .docker/postgres/data:/var/lib/postgresql/data
#      - .docker/postgres/backup:/backups
#    ports:
#      - "5432:5432"
#    env_file:
#      - .env
#    stdin_open: true
#    tty: true
#    command: postgres -c 'max_connections=1000'

#
#  mongo:
#    image: mongo:4.4
#    env_file:
#      - .env
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
#    volumes:
#      - .docker/mongo:/data/db
#    ports:
#      - "27017:27017"

  influxdb:
    image: influxdb:2.0
    ports:
      - '8086:8086'
    volumes:
      - .docker/influxdb/data:/var/lib/influxdb2
      - .docker/influxdb/config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_V2_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=air


#  traefik:
#    image: "traefik:v2.4"
#    container_name: "traefik"
#    command:
#      - "--log.level=DEBUG"
#      - "--api.insecure=true"
#      - "--providers.docker=true"
#      - "--api.dashboard=true"
#      - "--providers.docker.exposedbydefault=false"
#      - "--entrypoints.fastapi.address=:80"
#    ports:
#      - "80:80"
#      - "8080:8080"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    user: "0"
    links:
      - influxdb
    volumes:
      # Data persistency
      # sudo chown 472:472 .docker/grafana
      - .docker/grafana:/var/lib/grafana
      - ./compose/grafana/provisioning:/etc/grafana/provisioning
      - ./compose/grafana/config.ini:/etc/grafana/grafana.ini

#volumes:
#  grafana_provisioning:

